version: "3.3"

services:
    backend:
        # restart: on-failure
        container_name: backend
        build:
            context: ./backend/
            dockerfile: Dockerfile
        # volumes:
        #     - .:/app
        #     - media_volume:/app/media
        ports:
            - "8000:8000"
        env_file:
            - ./backend/backend/.env
        depends_on:
            - database
        links:
            - database:database
        networks:
            - recipeapp
    
    # frontend:
    #     container_name: frontend
    #     build:
    #         context: ./frontend/
    #         dockerfile: Dockerfile
    #     # restart: on-failure
    #     env_file:
    #         - ./frontend/.env
    #     # volumes:
    #     #     - /client:/app
    #     #     - /app/node_modules
    #     networks:
    #         - recipeapp
    #     ports:
    #         - "3000:3000"
    #     depends_on:
    #         - database
    #         - redis
    #         - backend

    database:
        restart: always
        container_name: database
        image: postgres:12.0-alpine
        ports:
            - "5432:5432"
        env_file:
            - ./backend/backend/.env
        volumes:
            - postgres_data:/var/lib/postgresql/data/
            # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            - POSTGRES_USER=recipeadmin
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=recipeapp
        networks:
            - recipeapp

    redis:
        image: redis:5-alpine
        ports:
            - "6379:6379"
        networks:
            - recipeapp

networks:
    recipeapp:
        driver: bridge

volumes:
    postgres_data:
    media_volume: